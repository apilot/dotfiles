exec = kvantummanager --set 'catppuccin-mocha-lavender'
exec = gsettings set org.gnome.desktop.interface icon-theme 'Golden-Hour-Icons'
exec = gsettings set org.gnome.desktop.interface gtk-theme 'Catppuccin-Mocha-Standard-Lavender-Dark'
exec = gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'

exec = hyprctl setcursor 'Catppuccin Mocha Dark' 22
exec = gsettings set org.gnome.desktop.interface cursor-theme 'Catppuccin Mocha Dark'
exec = gsettings set org.gnome.desktop.interface cursor-size 22


# See https://wiki.hyprland.org/Configuring/Monitors/
monitor= DVI-I-1, 1920x1080@60, 0x0, 1.00
monitor= eDP-1, 1920x1080@240.00101, 960x1080, 1.00
monitor= HDMI-A-1, 1920x1080@60, 1920x0, 1.00

# workspaces to monitor assign
workspace = 1, monitor:eDP-1
workspace = 2, monitor:eDP-1
workspace = 3, monitor:eDP-1
workspace = 4, monitor:DVI-I-1
workspace = 5, monitor:DVI-I-1
workspace = 6, monitor:DVI-I-1
workspace = 7, monitor:HDMI-A-1
workspace = 8, monitor:HDMI-A-1
workspace = 9, monitor:HDMI-A-1

# See https://wiki.hyprland.org/Configuring/Keywords/ for more

# Execute your favorite apps at launch
#exec-once = garuda-welcome

# Add networkmanager applet to tray in waybar
exec-once = nm-applet --indicator

# Add networkmanager applet to tray in waybar
exec-once = blueman-tray

# Add KMix applet to tray in waybar
exec-once = kmix 

# Set keyboard layout
#exec-once = .local/bin/garuda-locale.sh

# Set monitor values. For own values, please comment with #
#exec-once = .local/bin/mon.sh

# Source a file (multi-file configs)
# source = ~/.config/hypr/myColors.conf

# For all categories, see https://wiki.hyprland.org/Configuring/Variables/
input {
kb_layout = us,ru
    kb_options = grp:win_space_toggle 
    numlock_by_default= true
    follow_mouse = 1

touchpad {
    natural_scroll = true
    tap-to-click = true
    disable_while_typing = true
}


    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

general {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    gaps_in = 5
    gaps_out = 10
    border_size = 2
    col.active_border = rgba(33ccffee) rgba(8f00ffee) 45deg
    col.inactive_border = rgba(595959aa)

    layout = dwi:ndle
}
cursor {
    enable_hyprcursor = true
    hide_on_key_press = false
    hide_on_touch = false
    no_hardware_cursors = true
  }
decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    rounding = 8
    active_opacity = 0.9
    inactive_opacity = 0.8
    fullscreen_opacity = 1
    dim_inactive = true
    dim_strength = 0.4
    blur {
       enabled = true
       size = 5
       passes = 1
    }

    drop_shadow = true
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}

animations {
    enabled = true

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
    pseudotile = true # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # you probably want this
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = on
}
misc {
	disable_hyprland_logo = true
}
# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/
# executing for more

#device:epic mouse V1 {
#   sensitivity = -0.5
#}

# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
# Example windowrule v1
windowrule = float, ^(garuda-assistant)$
windowrule = float, ^(CopyQ)$
windowrule = float, ^(garuda-boot-options)$
windowrule = float, ^(garuda-boot-repair)$
windowrule = float, ^(garuda-gamer)$
windowrule = float, ^(garuda-network-assistant)$
windowrule = float, ^(garuda-settings-manager)$
windowrule = float, ^(garuda-welcome)$
windowrule = float, $(- KMix)$
windowrule = noanim, ^(REAPER)$




# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
windowrulev2 = float, class:^(org.keepassxc.KeePassXC)$, title:^(KeePassXC -  Access Request)$
windowrulev2 = center, class:^(org.keepassxc.KeePassXC)$, title:^(KeePassXC -  Access Request)$
windowrulev2 = float, class:^(simple-scan)$
windowrulev2 = float, class:^(alsamixer)$
windowrulev2 = float, class:^(lxappearence)$
windowrulev2 = float, class:^(thunderbird)$
windowrulev2 = tile, title:^(Mozilla Thunderbird)$
windowrulev2 = float, class:^(pavucontrol)$
windowrulev2 = float, class:^(blueman-manager)$
windowrulev2 = float, class:^(org.kde.kmix)$
windowrulev2 = float, class:^(qt5ct)$
windowrulev2 = float, class:^(com.github.hluk.copyq)$
windowrulev2 = nofocus,class:REAPER,title:^$

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod SHIFT, R, exec, hyprctl reload
bind = $mainMod, 36, exec, kitty 
bind = $mainMod, T, exec, kitty
bind = $mainMod, Q, killactive,
bind = $mainMod SHIFT, E, exec, nwgbar
bind = $mainMod, N, exec, thunar
bind = $mainMod SHIFT, 65, togglefloating,
bind = $mainMod, D, exec, wofi --normal-window --show drun --allow-images
bind = $mainMod SHIFT, D, exec, nwg-drawer -mb 10 -mr 10 -ml 10 -mt 10
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod SHIFT, P, togglesplit, # dwindle

# Mainmod + Function keys
bind = $mainMod, F1, exec, google-chrome-stable
bind = $mainMod, F2, exec, thunderbird
bind = $mainMod, F3, exec, thunar
bind = $mainMod, F4, exec, geany
bind = $mainMod, F5, exec, github-desktop
bind = $mainMod, F6, exec, gparted
bind = $mainMod, F7, exec, inkscape
bind = $mainMod, F8, exec, blender
bind = $mainMod, F9, exec, meld
bind = $mainMod, F10, exec, joplin-desktop
bind = $mainMod, F11, exec, snapper-tools
bind = $mainMod, F12, exec, galculator

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, H, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, L, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, K, movefocus, u
bind = $mainMod, down, movefocus, d
bind = $mainMod, J, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move to workspace with focused container with ALT + SHIFT + [0-9]
bind = ALT SHIFT, 1, movetoworkspace, 1
bind = ALT SHIFT, 2, movetoworkspace, 2
bind = ALT SHIFT, 3, movetoworkspace, 3
bind = ALT SHIFT, 4, movetoworkspace, 4
bind = ALT SHIFT, 5, movetoworkspace, 5
bind = ALT SHIFT, 6, movetoworkspace, 6
bind = ALT SHIFT, 7, movetoworkspace, 7
bind = ALT SHIFT, 8, movetoworkspace, 8
bind = ALT SHIFT, 9, movetoworkspace, 9
bind = ALT SHIFT, 0, movetoworkspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9
bind = $mainMod SHIFT, 0, movetoworkspacesilent, 10

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# background
exec-once = wpaperd

# status bar
exec-once = waybar
layerrule = blur , waybar
layerrule = ignorezero , waybar

# set volume (laptops only and may or may not work on PCs)
bind = ,122, exec, pactl set-sink-volume @DEFAULT_SINK@ -5%
bind = ,123, exec, pactl set-sink-volume @DEFAULT_SINK@ +5%
bind = ,121, exec, pactl set-sink-volume @DEFAULT_SINK@ 0%
# other bindings
bind = $mainMod, O, exec, google-chrome-stable
bind = $mainMod, F, fullscreen
# bind = $mainMod SHIFT, F, fakefullscreen
bind = ,232,exec,brightnessctl -c backlight set 5%-
bind = ,233,exec,brightnessctl -c backlight set +5%
bind = $mainMod SHIFT,C, exec, killall -9 wpaperd && wpaperd

# Screenshots:
#
# Change to swappy https://github.com/jtheoof/swappy
# Old functions only commented out to make it easier for the user to change if necessary.

# Snip a selection and pipe to swappy
bind = ,Print, exec, grim -g "$(slurp)" - | swappy -f -
# Screenshot a window and pipe to swappy
bind = CTRL, Print, exec, .config/hypr/scripts/screenshot_window.sh
# Screenshot the current display and pipe to swappy
bind = SHIFT, Print, exec, .config/hypr/scripts/screenshot_display.sh

# https://github.com/hyprwm/contrib/blob/main/grimblast/grimblast.1.scd
# Print: All outputs
# SHIFT+Print: Select area
# $mainMod+Print: Current window
# $mainMod+Shfit+Print: Current output
#
# bind = ,Print, exec, grimblast save screen && notify-send Screenshot captured
# bind = SHIFT, Print, exec, grimblast save area && notify-send Selected\ area captured
# bind = $mainMod, Print, exec, grimblast save active && notify-send Active\ window captured
# bind = $mainMod SHIFT, Print, exec, grimblast output active && notify-send Output captured

# for resizing window
# will switch to a submap called resize
bind=$mainMod,R,submap,resize

# will start a submap called "resize"
submap=resize

# sets repeatable binds for resizing the active window
binde=,right,resizeactive,50 0
binde=,L,resizeactive,50 0
binde=,left,resizeactive,-50 0
binde=,H,resizeactive,-50 0
binde=,up,resizeactive,0 -50
binde=,K,resizeactive,0 -50
binde=,down,resizeactive,0 50
binde=,J,resizeactive,0 50

# use reset to go back to the global submap
bind=,escape,submap,reset

# will reset the submap, meaning end the current one and return to the global one
submap=reset

# to move window
bind = $mainMod SHIFT,up, movewindow, u
bind = $mainMod SHIFT,K, movewindow, u
bind = $mainMod SHIFT,down, movewindow, d
bind = $mainMod SHIFT,J, movewindow, d
bind = $mainMod SHIFT,left, movewindow, l
bind = $mainMod SHIFT,H, movewindow, l
bind = $mainMod SHIFT,right, movewindow, r
bind = $mainMod SHIFT,L, movewindow, r

# other blurings
blurls = wofi
blurls = thunar
blurls = gedit
blurls = gtk-layer-shell # for nwg-drawer
blurls = catfish
# window rules
windowrule = opacity 0.85 override 0.85 override,^(thunar)$
windowrule = opacity 0.85 override 0.85 override,^(gedit)$
windowrule = opacity 0.85 override 0.85 override,^(catfish)$
windowrule = stayfocused, ^(wofi)$

# window rules with evaluation
windowrulev2 = opacity 0.85 0.85,floating:1

exec-once = mako
exec-once =/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec-once = foot --server
# experimental(might work might won't)

# pre executions (under development)
exec-once=exec xrdb -load ~/.Xresources

# Clipboard Manager
exec-once = copyq --start-server
# exec-once = wl-paste --type text --watch cliphist store #Stores only text data
# exec-once = wl-paste --type image --watch cliphist store #Stores only image data
exec-once = wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman-primary.json"
bind = SUPER, V, exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy

# video play paues bindings
bind=,172,exec,playerctl play-pause
bind=,171,exec,playerctl next
bind=,173,exec,playerctl previous

# Use gtk-settings
exec = apply-gsettings

# Performance Tweaks (For less power consumption without sacrificing performance)
# See : https://wiki.hyprland.org/Configuring/Performance/
misc:vfr = true
# show opened windows list
bind = ALT,TAB, exec, ~/.config/wofi/list_windows.sh
# enable G-Hyprland
bind = $mainMod SHIFT, G, exec, footclient -e ~/.local/bin/bear/implement_gum.sh enable
# Install Garuda Hyprland
bind = $mainMod, I, exec, .local/bin/calamares.sh

env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland
env = GDK_BACKEND,wayland
env = QT_QPA_PLATFORM,wayland
env = QT_QPA_PLATFORMTHEME,qt5ct
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = QT_AUTO_SCREEN_SCALE_FACTOR,1
env = MOZ_ENABLE_WAYLAND,1
env = GTK_THEME,Catppuccin-Mocha-Standard-Lavender-Dark
env = XDG_MENU_PREFIX,arch-

# Let the user customize this hyprstart script by overriding stuff in $hyprstart
exec-once = .config/hypr/exec-hyprland

plugin = /usr/lib/libhy3.so
